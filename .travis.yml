cache:
  # This persistent cache is used to cache the building of
  # docker base images.
  directories:
    - $DOCKER_TRAVIS_CI_CACHE_DIR
sudo: required
language: cpp
services:
  - docker
env:
  global:
    # This environment variable tells the `travis_ci_linux_entry_point.sh`
    # script to look for a cached Docker image.
    - DOCKER_TRAVIS_CI_CACHE_DIR=$HOME/.cache/docker
  # Configurations
  matrix:
###############################################################################
# Ubuntu 16.04 LTS
###############################################################################
    # Both of the two configurations below build the docs because the current
    # implementation uses python as part of the building process.
    # TODO: Teach one of the configurations to upload built docs somewhere.
    # Test with Python 3 and API docs
    - LINUX_BASE=ubuntu_16.04 PYTHON_EXECUTABLE=/usr/bin/python3 BUILD_DOCS=1
    # Test with LibGMP and API docs
    - LINUX_BASE=ubuntu_16.04 TARGET_ARCH=x86_64 USE_LIBGMP=1 BUILD_DOCS=1 PYTHON_EXECUTABLE=/usr/bin/python2.7

    # Unix Makefile generator build
    - LINUX_BASE=ubuntu_16.04 C_COMPILER=/usr/bin/gcc-5 CXX_COMPILER=/usr/bin/g++-5 TARGET_ARCH=x86_64 Z3_CMAKE_GENERATOR="Unix Makefiles"

    # Static build. Note we have disable building the bindings because they won't work with a static libz3
    - LINUX_BASE=ubuntu_16.04 C_COMPILER=/usr/bin/gcc-5 CXX_COMPILER=/usr/bin/g++-5 TARGET_ARCH=x86_64 Z3_STATIC_BUILD=1 DOTNET_BINDINGS=0 JAVA_BINDINGS=0 PYTHON_BINDINGS=0


# macOS (a.k.a OSX) support
matrix:
  include:
    # For now just test a single configuration. macOS builds on TravisCI are
    # very slow so we should keep the number of configurations we test on this
    # OS to a minimum.
    - os: osx
      osx_image: xcode8.3
      # Note: Apple Clang does not support OpenMP
      env: Z3_BUILD_TYPE=RelWithDebInfo USE_OPENMP=0
script:
  # Use `travis_wait` when doing LTO builds because this configuration will
  # have long link times during which it will not show any output which
  # TravisCI might kill due to perceived inactivity.
  - if [ "X${USE_LTO}" = "X1" ]; then
      travis_wait 45 contrib/ci/scripts/travis_ci_entry_point.sh || exit 1;
    else
      contrib/ci/scripts/travis_ci_entry_point.sh || exit 1;
    fi
install:
  # Install Anaconda
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
after_success:
  - test $TRAVIS_BRANCH = "master" && conda install conda-build && conda install anaconda-client && bash conda/conda_upload.sh
